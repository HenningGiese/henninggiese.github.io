name: Deploy Hugo site to Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_ENV: production
      HUGO_MODULE_PROXY: "https://proxy.golang.org"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      # Node is required so Hugo can run Tailwind via npx
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Ensure Tailwind toolchain
        run: |
          # If there's a package.json, use it. Otherwise create minimal deps.
          if [ -f package.json ]; then
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          else
            npm init -y
            npm install -D tailwindcss@^3 postcss@^8 autoprefixer@^10
          fi
          npx tailwindcss --help >/dev/null 2>&1 || { echo "Tailwind not installed."; exit 1; }

      - name: Setup Go (for Hugo Modules)
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'

      - name: Setup Hugo (extended)
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.150.0'   # >= 0.148.2 required by blox-tailwind
          extended: true

      - name: Clean module state
        run: |
          go clean -modcache
          rm -f go.mod go.sum || true
          go mod init example.com/site

      - name: Resolve Hugo Modules (use imports from config)
        run: |
          # Your hugo.yaml imports: github.com/HugoBlox/hugo-blox-builder/starters/academic-cv
          hugo mod tidy
          hugo mod graph

      - name: Build site
        run: hugo --minify --gc

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
